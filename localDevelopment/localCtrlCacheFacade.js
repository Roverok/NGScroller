// Generated by CoffeeScript 1.7.1
angular.module('application', ['ui.scroll', 'ui.scroll.jqlite']).controller('mainController', [
	'$scope', '$log', '$timeout', function ($scope, console, $timeout) {

		var datasource = {};

		datasource.cache = {

			initialize: function() {
				this.isEnabled = true;
				this.items = {};
				this.getPure = datasource.get;
				datasource.get = this.getCached;
			},

			getCached:  function (index, count, successCallback) {
				var self = datasource.cache;

				if (self.isEnabled) {
					if(self.getItems(index, count, successCallback)){
						return;
					}
					return self.getPure(index, count, function(result) {
						self.saveItems(index, count, result);
						successCallback(result);
					});
				}

				return self.getPure(index, count, successCallback);
			},

			toggle: function () {
				this.isEnabled = !this.isEnabled;
				this.items = {};
			},

			saveItems: function (index, count, resultItems) {
				for (var i = 0; i < resultItems.length; i++) {
					if (!this.items.hasOwnProperty(index + i)) {
						this.items[index + i] = resultItems[i];
					}
				}
			},

			getItems: function (index, count, successCallback) {
				var result = [];
				var isCached = true;

				for (var i = index; i < index + count; i++) {
					if (!this.items.hasOwnProperty(i)) {
						isCached = false;
						return;
					}
					result.push(this.items[i]);
				}

				successCallback(result);
				return true;
			}
		};


		datasource.get = function (index, count, success) {
			var self = this;

			return $timeout(function () {
				var i, item, result, _i, _ref;
				result = [];
				for (i = _i = index, _ref = index + count - 1; index <= _ref ? _i <= _ref : _i >= _ref; i = index <= _ref ? ++_i : --_i) {
					item = {};
					item.content = "item #" + i;
					result.push(item);
				}
				return success(result);
			}, 100);
		};

		datasource.cache.initialize();

		$scope.datasource = datasource;
	}

]);
