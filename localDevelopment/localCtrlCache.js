// Generated by CoffeeScript 1.7.1
angular.module('application', ['ui.scroll', 'ui.scroll.jqlite']).controller('mainController', [
	'$scope', '$log', '$timeout', function ($scope, console, $timeout) {
		var datasource;
		datasource = {};

		datasource.cache = {
			isEnabled: true,

			items: {},

			toggle: function () {
				this.isEnabled = !this.isEnabled;
				return this.items = {};
			},

			saveItem: function (item, index) {
				if (!this.isEnabled) {
					return;
				}
				return this.items[index] = item;
			},

			get: function (index, count, success) {
				var i, isCached, result, _i, _ref;
				if (!this.isEnabled) {
					return;
				}
				result = [];
				isCached = true;

				for (i = _i = index, _ref = index + count - 1; _i <= _ref; i = _i += 1) {
					if (!this.items.hasOwnProperty(i)) {
						isCached = false;
						return;
					}
					result.push(this.items[i]);
				}

				success(result);
				return true;
			}
		};

		datasource.get = function (index, count, success) {
			var self = this;

			if (self.cache && self.cache.get(index, count, success)) {
				return;
			}

			return $timeout(function () {
				var i, item, result, _i, _ref;
				result = [];
				for (i = _i = index, _ref = index + count - 1; index <= _ref ? _i <= _ref : _i >= _ref; i = index <= _ref ? ++_i : --_i) {

					item = {};
					item.content = "item #" + i;
					result.push(item);

					if (self.cache) {
						self.cache.saveItem(item, i);
					}
				}
				return success(result);
			}, 100);
		};
		return $scope.datasource = datasource;
	}

]);
